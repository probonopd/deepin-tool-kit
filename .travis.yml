language: cpp
compiler: gcc
sudo: require
dist: trusty

before_install:
  - sudo add-apt-repository ppa:beineri/opt-qt593-trusty -y
  - sudo apt-get update -qq

install:
  - sudo apt-get -y install qt59base libgsettings-qt-dev
  - source /opt/qt*/bin/qt*-env.sh

script:
  - wget -c "http://deb.debian.org/debian/pool/main/d/dtkcore/dtkcore_2.0.9.11.orig.tar.gz"
  - wget -c "http://deb.debian.org/debian/pool/main/d/dtkwidget/dtkwidget_2.0.9.11.orig.tar.gz"
  - tar xf dtkcore_*.orig.tar.gz
  - tar xf dtkwidget_2*.orig.tar.gz
  - cd dtkcore*/
  - mkdir build
  - cd build
  - qmake .. CONFIG+=release PREFIX=/usr
  - make -j$(nproc)
  - sudo make install
  - cd ../..
  - cd dtkwidget*/
  - mkdir build
  - cd build
  - qmake .. CONFIG+=release PREFIX=/usr
  - make -j$(nproc)
  - sudo make install
  - cd ..
  # Compile a sample application
  - git  clone https://github.com/rekols/optimizer
  - cd optimizer
  - qmake CONFIG+=release PREFIX=/usr
  - make -j$(nproc)
  # make INSTALL_ROOT=appdir -j$(nproc) install ; find appdir/
  # wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  # chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  # unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  # export VERSION=$(git rev-parse --short HEAD) # linuxdeployqt uses this for naming the file
  # ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage

after_success:
  # find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  # # curl --upload-file APPNAME*.AppImage https://transfer.sh/APPNAME-git.$(git rev-parse --short HEAD)-x86_64.AppImage
  # wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh APPNAME*.AppImage*
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
